{"version":3,"sources":["webpack://todo/./node_modules/@firebase/database/dist/index.esm.js"],"names":["id","DOMStorageWrapper","domStorage_","this","prefix_","prototype","set","key","value","removeItem","prefixedName_","setItem","get","storedVal","getItem","remove","name","toString","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","LUIDGenerator","sha1","str","utf8Bytes","update","sha1Bytes","digest","buildLogMessage_","varArgs","_i","arguments","length","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","logLevel","log","bind","logWrapper","prefix","error","fatal","Error","warn","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","fn","hasOwnProperty","doubleToIEEE754String","v","s","f","ln","Math","abs","pow","min","floor","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","INTEGER_REGEXP_","RegExp","test","intVal","exceptionGuard","setTimeout","stack","setTimeoutNonBlocking","time","timeout","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","pathString","newEmptyPath","pathGetFront","path","pathGetLength","pathPopFront","pathGetBack","pathToUrlEncodedString","encodeURIComponent","String","pathSlice","begin","slice","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","other","j","pathContains","lastPushTime","lastRandChars","__EMPTY_NODE","MAX_NODE","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","_defaultIndexMap","EMPTY_NODE","ValidationPath","errorPrefix_","parts_","byteLength_","max","checkValid_","Object","defineProperty","enumerable","configurable","child","pop","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","FORGE_DOMAIN_RE","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","domain","indexOf","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","type","params","connURL","pairs","toURLString","protocol","query","parseRepoInfo","dataURL","parsedUrl","parseDatabaseURL","location","scheme","repoInfo","subdomain","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","replace","decodePath","queryParams","queryString","e_1","_a","results","charAt","_b","_c","next","done","segment","kv","e_1_1","return","call","decodeQuery","hostWithoutPort","dotInd","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","undefined","validateFirebaseData","errorPrefix","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergeDataArg","errorPrefix$1","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","isValidRootPathString","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","deferred","onDisconnectCancel","wrapCallback","promise","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","PUSH_CHARS","nextPushId","now","duplicateTime","timeStampChars","random","successor","keyAsInt","i_1","source","sourcePlusOne","predecessor","repeat","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","_super","val","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","isEmpty","getPriority","LeafNode","value_","priorityNode_","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","index","action","exportFormat","getValue","hash","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","PRIORITY_INDEX","PriorityIndex","aPriority","bPriority","indexCmp","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","result","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","root","base12","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","newIndexes","addToIndexes","_this","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","nodeFromJSON$1","json","node_1","childData","children_1","childrenHavePriority_1","childSet","sortedChildSet","defineProperties","MAX","setNodeFromJSON","VALUE_INDEX","ValueIndex","valueNode","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","forEach","childrenNode","hasChildren","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","ref","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","createEvent","change","getQueryParams","getIndex","snapshotNode","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","matches","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherKeys","thisKeys","otherCount","otherKey","thisKey","every","changeValue","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","__referenceConstructor","IndexedFilter","newChild","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","filtered","self","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","childKey","childSnap","changeAccumulator","indexCmp_1","oldEventCache","newChildNamedNode","windowBoundary","inRange","oldChildSnap","nextChild","getChildAfterChild","compareNext","newEventCache","QueryParams","limitSet_","startSet_","startNameSet_","startAfterSet_","endSet_","endNameSet_","endBeforeSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasStartAfter","hasEndBefore","hasLimit","hasAnchoredLimit","loadsAllData","isDefault","queryParamsLimitToFirst","newLimit","newParams","queryParamsLimitToLast","queryParamsStartAt","queryParamsStartAfter","queryParamsEndAt","queryParamsEndBefore","queryParamsOrderBy","queryParamsToRestQueryStringParameters","orderBy","qs","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","tooManyArgsError","wrongArgTypeError","validateLimit_","validateNoPreviousOrderByCall_","on","callback","cancelCallbackOrContext","context","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","container","addEventCallbackForQuery","off","valueCallback","removeEventCallbackForQuery","once","userCallback","failureCallbackOrContext","firstCall","catch","onceCallback","resolve","err","reject","limitToFirst","limit","limitToLast","orderByChild","parsedPath","orderByKey","orderByPriority","orderByValue","startAt","startAfter","endAt","endBefore","equalTo","queryObject","viewFrom","queryParamsGetQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","cancelOrContext","ExistingValueProvider","DeferredValueProvider","syncTree","syncTree_","calcCompleteEventCache","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","stringify","op","existing","unused","delta","existingNode","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","OperationType","SparseSnapshotTree","children","Map","find","size","has","remember","clear","forget","self_1","tree","delete","forEachTree","prefixPath","func","newOperationSourceServerTaggedQuery","queryId","fromUser","fromServer","tagged","emptyChildrenSingleton","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","ImmutableTree","fromObject","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","complete","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","values","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","serverChildren","EventGenerator","query_","eventGeneratorGenerateEventsForType","eventGenerator","events","registrations","eventCache","filteredChanges","filter","aWrapped","bWrapped","eventGeneratorCompareChanges","materializedChange","eventGeneratorMaterializeSingleChange","registration","__referenceConstructor$1","View","initialViewCache","eventRegistrations_","indexFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteNode","getCompleteServerCache","cache","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","concat","generateEventsForChanges_","getInitialEvents","initialChanges","eventRegistrations","moves","eventGeneratorGenerateEventsForChanges","SyncPoint","views","optCompleteServerCache","view","getView","serverCacheComplete","eventCacheComplete","e_2","removed","hadCompleteView","hasCompleteView","entries","_d","viewQueryId","e_2_1","getQueryViews","e_3","e_3_1","e_4","e_4_1","viewForQuery","getCompleteView","viewExistsForQuery","e_5","e_5_1","CompoundWrite","writeTree_","empty","compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","removeWrite","findIndex","writeToRemove","splice","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","layerTree_","write","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","tag","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","stopListening","queryToRemove","tagToRemove","removeTags_","getServerValue","serverCacheNode","maybeChildSyncPoint","childMap","views_1","_key","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","queriesToStop","queries_1","map","childQueries","queryToStop","status","code","reason","toUpperCase","errorForServerCode","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","StatsCollection","counters_","incrementCounter","amount","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","eventListRaise","eventFn","EventEmitter","allowedEvents_","listeners_","trigger","listeners","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","document","addEventListener","visible_","getInstance","OnlineMonitor","online_","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","BrowserPollConnection","connId","applicationId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","readyState","called_1","wrappedFn_1","body","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","hostname","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","href","Windows","UI","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","iframeContents","doc","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","theURL","curDataString","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","add","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","setSDKVersion","version","WebSocketImpl","MozWebSocket","WebSocket","TransactionStatus","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","Connection","repoInfo_","applicationId_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","RECONNECT_MIN_DELAY","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","request","p","q","outstandingGet","sendGet_","listen","currentHashFn","listenSpec","sendListen_","req","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","token_1","authMethod","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","forceRefresh","getToken","then","accessToken","interrupt","resume","serverTimeOffset","normalizedPathString","statusCode","explanation","notifyForInvalidToken","console","_e","_f","clientName","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","restRequest_","authTokenData","authToken","xhr","XMLHttpRequest","responseText","TreeNode","childCount","Tree","name_","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","parent","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","INTERRUPT_REASON","Repo","forceRestClient_","app","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","search","authOverride","appId","addTokenChangeListener","statsReporter_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offset","generateServerValues","isMerge","taggedChildren","raw","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","cached","Promise","newVal","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","resolved","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","statsIncrementCounter","metric","__database","Database","startTransaction","transactionUpdate","applyLocally","watchRef","Reference","transaction","order","retryCount","unwatcher","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","abortTransaction","currentNode","newDataNode","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","to","abortTransactionsOnNode_","lastSent","parentPath","getRoot","databaseProp","database","promiseComplete","setPriority","thennablePushRef","pushRef","_staticInstance","FirebaseAuthTokenProvider","app_","authProvider_","auth_","getImmediate","auth","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorAdminTokenProvider","EMULATOR_AUTH_TOKEN","RepoManager","repos_","useRestClient_","appName","dbUrl","applyEmulatorSettings","databaseFromApp","authProvider","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","createRepo","deleteRepo","appRepos","forceRestClient","repoInternal_","instanceStarted_","INTERNAL","checkDeleted_","rootInternal_","useEmulator","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP","increment","freeze","__proto__","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","initStandalone","customAuthImpl","setComponent","instance","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","registerComponent","getProvider","setServiceProps","setMultipleInstances","registerVersion","module","exports","registerDatabase"],"mappings":"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","file":"642.main.js","sourcesContent":["import firebase from '@firebase/app';\nimport { __spread, __values, __extends, __assign, __read, __awaiter, __generator } from 'tslib';\nimport { stringify, jsonEval, contains, assert, base64, stringToByteArray, Sha1, isNodeSdk, stringLength, errorPrefix, validateArgCount, validateCallback, Deferred, assertionError, safeGet, map, validateContextObject, deepCopy, isMobileCordova, base64Encode, isAdmin, isValidFormat, isEmpty, isReactNative, querystring } from '@firebase/util';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param key The key to save the value under\r\n     * @param value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @return The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return jsonEval(storedVal);\r\n        }\r\n    };\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    var sha1 = new Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return base64.encodeByteArray(sha1Bytes);\r\n};\r\nvar buildLogMessage_ = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < varArgs.length; i++) {\r\n        var arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\r\nvar logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ A flag to turn on logging, or a custom logger\r\n * @param persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\nvar log = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        var message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, __spread([prefix], varArgs));\r\n    };\r\n};\r\nvar error = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, __spread(varArgs));\r\n    logClient.error(message);\r\n};\r\nvar fatal = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, __spread(varArgs));\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\nvar warn = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, __spread(varArgs));\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn_1();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\r\n    }\r\n};\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return stringify(obj);\r\n    }\r\n    var keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str The string\r\n * @param segsize The maximum number of chars in the string.\r\n * @return The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj The object or array to iterate over\r\n * @param fn The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v A double\r\n *\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1;\r\n    var s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    var bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    var str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\r\nvar INTEGER_32_MIN = -2147483648;\r\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\r\nvar INTEGER_32_MAX = 2147483647;\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn Function to run.\r\n * @param time Milliseconds to wait before running.\r\n * @return The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param pathOrString Path string to parse, or another path, or the raw\r\n     * tokens array\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    return Path;\r\n}());\r\nfunction newEmptyPath() {\r\n    return new Path('');\r\n}\r\nfunction pathGetFront(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    return path.pieces_[path.pieceNum_];\r\n}\r\n/**\r\n * @return The number of segments in this path\r\n */\r\nfunction pathGetLength(path) {\r\n    return path.pieces_.length - path.pieceNum_;\r\n}\r\nfunction pathPopFront(path) {\r\n    var pieceNum = path.pieceNum_;\r\n    if (pieceNum < path.pieces_.length) {\r\n        pieceNum++;\r\n    }\r\n    return new Path(path.pieces_, pieceNum);\r\n}\r\nfunction pathGetBack(path) {\r\n    if (path.pieceNum_ < path.pieces_.length) {\r\n        return path.pieces_[path.pieces_.length - 1];\r\n    }\r\n    return null;\r\n}\r\nfunction pathToUrlEncodedString(path) {\r\n    var pathString = '';\r\n    for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        if (path.pieces_[i] !== '') {\r\n            pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\r\n        }\r\n    }\r\n    return pathString || '/';\r\n}\r\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\r\nfunction pathSlice(path, begin) {\r\n    if (begin === void 0) { begin = 0; }\r\n    return path.pieces_.slice(path.pieceNum_ + begin);\r\n}\r\nfunction pathParent(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    var pieces = [];\r\n    for (var i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\nfunction pathChild(path, childPathObj) {\r\n    var pieces = [];\r\n    for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    if (childPathObj instanceof Path) {\r\n        for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n            pieces.push(childPathObj.pieces_[i]);\r\n        }\r\n    }\r\n    else {\r\n        var childPieces = childPathObj.split('/');\r\n        for (var i = 0; i < childPieces.length; i++) {\r\n            if (childPieces[i].length > 0) {\r\n                pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\n/**\r\n * @return True if there are no segments in this path\r\n */\r\nfunction pathIsEmpty(path) {\r\n    return path.pieceNum_ >= path.pieces_.length;\r\n}\r\n/**\r\n * @return The path from outerPath to innerPath\r\n */\r\nfunction newRelativePath(outerPath, innerPath) {\r\n    var outer = pathGetFront(outerPath), inner = pathGetFront(innerPath);\r\n    if (outer === null) {\r\n        return innerPath;\r\n    }\r\n    else if (outer === inner) {\r\n        return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\r\n    }\r\n    else {\r\n        throw new Error('INTERNAL ERROR: innerPath (' +\r\n            innerPath +\r\n            ') is not within ' +\r\n            'outerPath (' +\r\n            outerPath +\r\n            ')');\r\n    }\r\n}\r\n/**\r\n * @return -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\r\nfunction pathCompare(left, right) {\r\n    var leftKeys = pathSlice(left, 0);\r\n    var rightKeys = pathSlice(right, 0);\r\n    for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n        var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n        if (cmp !== 0) {\r\n            return cmp;\r\n        }\r\n    }\r\n    if (leftKeys.length === rightKeys.length) {\r\n        return 0;\r\n    }\r\n    return leftKeys.length < rightKeys.length ? -1 : 1;\r\n}\r\n/**\r\n * @return true if paths are the same.\r\n */\r\nfunction pathEquals(path, other) {\r\n    if (pathGetLength(path) !== pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    for (var i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @return True if this path is a parent (or the same as) other\r\n */\r\nfunction pathContains(path, other) {\r\n    var i = path.pieceNum_;\r\n    var j = other.pieceNum_;\r\n    if (pathGetLength(path) > pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    while (i < path.pieces_.length) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n        ++i;\r\n        ++j;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param path Initial Path.\r\n     * @param errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        this.parts_ = pathSlice(path, 0);\r\n        /** Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @param child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length === 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\r\n// firebase.corp.google.com\r\nvar FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar APPLICATION_ID_PARAM = 'p';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param host Hostname portion of the url for the repo\r\n     * @param secure Whether or not this repo is accessed over ssl\r\n     * @param namespace The namespace represented by the repo\r\n     * @param webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param nodeAdmin Whether this instance uses Admin SDK credentials\r\n     * @param persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\r\n        if (nodeAdmin === void 0) { nodeAdmin = false; }\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        if (includeNamespaceInQueryParams === void 0) { includeNamespaceInQueryParams = false; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.nodeAdmin = nodeAdmin;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return (this.host !== this.internalHost ||\r\n            this.isCustomHost() ||\r\n            this.includeNamespaceInQueryParams);\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param type of connection\r\n     * @param params list\r\n     * @return The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        assert(typeof type === 'string', 'typeof type must == string');\r\n        assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        each(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        var protocol = this.secure ? 'https://' : 'http://';\r\n        var query = this.includeNamespaceInQueryParams\r\n            ? \"?ns=\" + this.namespace\r\n            : '';\r\n        return \"\" + protocol + this.host + \"/\" + query;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @return key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var e_1, _a;\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    try {\r\n        for (var _b = __values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var segment = _c.value;\r\n            if (segment.length === 0) {\r\n                continue;\r\n            }\r\n            var kv = segment.split('=');\r\n            if (kv.length === 2) {\r\n                results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n            }\r\n            else {\r\n                warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return results;\r\n}\r\nvar parseRepoInfo = function (dataURL, nodeAdmin) {\r\n    var parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase.com') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\nvar parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = host.length;\r\n        }\r\n        var hostWithoutPort = host.slice(0, colonInd);\r\n        if (hostWithoutPort.toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        else if (hostWithoutPort.split('.').length <= 2) {\r\n            domain = hostWithoutPort;\r\n        }\r\n        else {\r\n            // Interpret the subdomain of a 3 or more component URL as the namespace name.\r\n            var dotInd = host.indexOf('.');\r\n            subdomain = host.substring(0, dotInd).toLowerCase();\r\n            domain = host.substring(dotInd + 1);\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            namespace = subdomain;\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString,\r\n        namespace: namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false;\r\n        var hasActualChild_1 = false;\r\n        each(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = pathSlice(curPath);\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(pathCompare);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && pathContains(prevPath, curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    var errorPrefix$1 = errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    each(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\r\n        if (pathGetBack(curPath) === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix$1 +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix$1, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined) {\r\n        return;\r\n    }\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (pathGetFront(path) === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined) {\r\n        return;\r\n    }\r\n    if (typeof bool !== 'boolean') {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Modeled after base64 web-safe chars, but ordered by ASCII.\r\nvar PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\nvar MIN_PUSH_CHAR = '-';\r\nvar MAX_PUSH_CHAR = 'z';\r\nvar MAX_KEY_LEN = 786;\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\r\nvar successor = function (key) {\r\n    if (key === '' + INTEGER_32_MAX) {\r\n        // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\r\n        return MIN_PUSH_CHAR;\r\n    }\r\n    var keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt + 1);\r\n    }\r\n    var next = new Array(key.length);\r\n    for (var i_1 = 0; i_1 < next.length; i_1++) {\r\n        next[i_1] = key.charAt(i_1);\r\n    }\r\n    if (next.length < MAX_KEY_LEN) {\r\n        next.push(MIN_PUSH_CHAR);\r\n        return next.join('');\r\n    }\r\n    var i = next.length - 1;\r\n    while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\r\n        i--;\r\n    }\r\n    // `successor` was called on the largest possible key, so return the\r\n    // MAX_NAME, which sorts larger than all keys.\r\n    if (i === -1) {\r\n        return MAX_NAME;\r\n    }\r\n    var source = next[i];\r\n    var sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\r\n    next[i] = sourcePlusOne;\r\n    return next.slice(0, i + 1).join('');\r\n};\r\n// `key` is assumed to be non-empty.\r\nvar predecessor = function (key) {\r\n    if (key === '' + INTEGER_32_MIN) {\r\n        return MIN_NAME;\r\n    }\r\n    var keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt - 1);\r\n    }\r\n    var next = new Array(key.length);\r\n    for (var i = 0; i < next.length; i++) {\r\n        next[i] = key.charAt(i);\r\n    }\r\n    // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\r\n    // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\r\n    // than that, `predecessor(predecessor(key))`, is\r\n    //\r\n    // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\r\n    //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\r\n    //\r\n    // analogous to increment/decrement for base-10 integers.\r\n    //\r\n    // This works because lexigographic comparison works character-by-character,\r\n    // using length as a tie-breaker if one key is a prefix of the other.\r\n    if (next[next.length - 1] === MIN_PUSH_CHAR) {\r\n        if (next.length === 1) {\r\n            // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\r\n            return '' + INTEGER_32_MAX;\r\n        }\r\n        delete next[next.length - 1];\r\n        return next.join('');\r\n    }\r\n    // Replace the last character with it's immediate predecessor, and\r\n    // fill the suffix of the key with MAX_PUSH_CHAR. This is the\r\n    // lexicographically largest possible key smaller than `key`.\r\n    next[next.length - 1] = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length - 1]) - 1);\r\n    return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     *\r\n     * @return True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    __extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @param value_ The value to store in this leaf node. The object type is\r\n     * possible in the event of a deferred value\r\n     * @param priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this;\r\n        }\r\n        else if (pathGetFront(path) === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    __extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @param node Node to iterate.\r\n     * @param isReverse_ Whether or not to iterate in reverse\r\n     * @param resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @param key Key associated with this node.\r\n     * @param value Value associated with this node.\r\n     * @param color Whether this node is red.\r\n     * @param left Left child.\r\n     * @param right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param key New key for the node, or null.\r\n     * @param value New value for the node, or null.\r\n     * @param color New color for the node, or null.\r\n     * @param left New left child for the node, or null.\r\n     * @param right New right child for the node, or null.\r\n     * @return The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return The minimum node in the tree.\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param key Key to insert.\r\n     * @param value Value to insert.\r\n     * @param comparator Comparator.\r\n     * @return New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var n = this;\r\n        var cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @return New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param key The key of the item to remove.\r\n     * @param comparator Comparator.\r\n     * @return New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @return Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @return New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @return New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @return New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @return New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @return New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @return Newt ree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @return True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    LLRBNode.prototype.check_ = function () {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        var blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param key Key to be added.\r\n     * @param value Value to be added.\r\n     * @param comparator Comparator.\r\n     * @return New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param key The key to remove.\r\n     * @param comparator Comparator.\r\n     * @return New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @param comparator_ Key comparator.\r\n     * @param root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param key Key to be added.\r\n     * @param value Value to be added.\r\n     * @return New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param key The key to remove.\r\n     * @return New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param key The key to look up.\r\n     * @return The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param key The key to find the predecessor of\r\n     * @return The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @return The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\nvar Base12Num = /** @class */ (function () {\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList Unsorted list of children\r\n * @param cmp The comparison method to be used\r\n * @param keyFn An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn An optional override for comparator used by the generated sorted map\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         */\r\n        get: function () {\r\n            assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    };\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = __assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = __assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = safeGet(_this.indexSet_, indexName);\r\n            assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     * @param children_ List of children of this node..\r\n     * @param priorityNode_ The priority of this node (as a snapshot node).\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(pathPopFront(path));\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            var newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (var key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    __extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json JSON to create a node for.\r\n * @param priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj = json;\r\n        each(hinzeJsonObj, function (key, child) {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        each(json, function (key, childData) {\r\n            if (contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    __extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    };\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    __extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return pathSlice(this.indexPath_, 0).join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param node_ A SnapshotNode to wrap.\r\n     * @param ref_ The ref of the location this snapshot came from.\r\n     * @param index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param childPathString Path to a child.\r\n     * @return DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param childPathString Path to a child.\r\n     * @return Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param action Callback function to be called\r\n     * for each child.\r\n     * @return True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this.node_.isEmpty();\r\n        }\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return The Firebase reference for the location this snapshot's data came\r\n     * from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param eventRegistration The function to call to with the event data. User provided\r\n     * @param snapshot The data backing the event\r\n     * @param prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(change.childName);\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        var _this = this;\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherKeys = Object.keys(other.callbacks_);\r\n                var thisKeys = Object.keys(this.callbacks_);\r\n                var otherCount = otherKeys.length;\r\n                var thisCount = thisKeys.length;\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    // If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey = otherKeys[0];\r\n                        var thisKey = thisKeys[0];\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return thisKeys.every(function (eventType) {\r\n                            return other.callbacks_[eventType] === _this.callbacks_[eventType];\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction changeValue(snapshotNode) {\r\n    return { type: \"value\" /* VALUE */, snapshotNode: snapshotNode };\r\n}\r\nfunction changeChildAdded(childName, snapshotNode) {\r\n    return { type: \"child_added\" /* CHILD_ADDED */, snapshotNode: snapshotNode, childName: childName };\r\n}\r\nfunction changeChildRemoved(childName, snapshotNode) {\r\n    return { type: \"child_removed\" /* CHILD_REMOVED */, snapshotNode: snapshotNode, childName: childName };\r\n}\r\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\r\n    return {\r\n        type: \"child_changed\" /* CHILD_CHANGED */,\r\n        snapshotNode: snapshotNode,\r\n        childName: childName,\r\n        oldSnap: oldSnap\r\n    };\r\n}\r\nfunction changeChildMoved(childName, snapshotNode) {\r\n    return { type: \"child_moved\" /* CHILD_MOVED */, snapshotNode: snapshotNode, childName: childName };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\r\n                }\r\n                else {\r\n                    assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        assert(oldEventCache.numChildren() === this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.startAfterSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.endBeforeSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    QueryParams.prototype.hasStartAfter = function () {\r\n        return this.startAfterSet_;\r\n    };\r\n    QueryParams.prototype.hasEndBefore = function () {\r\n        return this.endBeforeSet_;\r\n    };\r\n    /**\r\n     * @return True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return this.viewFrom_ === \"l\" /* VIEW_FROM_LEFT */;\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    };\r\n    QueryParams.prototype.copy = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    return QueryParams;\r\n}());\r\nfunction queryParamsGetNodeFilter(queryParams) {\r\n    if (queryParams.loadsAllData()) {\r\n        return new IndexedFilter(queryParams.getIndex());\r\n    }\r\n    else if (queryParams.hasLimit()) {\r\n        return new LimitedFilter(queryParams);\r\n    }\r\n    else {\r\n        return new RangedFilter(queryParams);\r\n    }\r\n}\r\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\r\n    var newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"l\" /* VIEW_FROM_LEFT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsLimitToLast(queryParams, newLimit) {\r\n    var newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"r\" /* VIEW_FROM_RIGHT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAt(queryParams, indexValue, key) {\r\n    var newParams = queryParams.copy();\r\n    newParams.startSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexStartValue_ = indexValue;\r\n    if (key != null) {\r\n        newParams.startNameSet_ = true;\r\n        newParams.indexStartName_ = key;\r\n    }\r\n    else {\r\n        newParams.startNameSet_ = false;\r\n        newParams.indexStartName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\r\n    var params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = successor(indexValue);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        var childKey = void 0;\r\n        if (key == null) {\r\n            childKey = MAX_NAME;\r\n        }\r\n        else {\r\n            childKey = successor(key);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.startAfterSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsEndAt(queryParams, indexValue, key) {\r\n    var newParams = queryParams.copy();\r\n    newParams.endSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexEndValue_ = indexValue;\r\n    if (key !== undefined) {\r\n        newParams.endNameSet_ = true;\r\n        newParams.indexEndName_ = key;\r\n    }\r\n    else {\r\n        newParams.endNameSet_ = false;\r\n        newParams.indexEndName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\r\n    var childKey;\r\n    var params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = predecessor(indexValue);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        if (key == null) {\r\n            childKey = MIN_NAME;\r\n        }\r\n        else {\r\n            childKey = predecessor(key);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.endBeforeSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsOrderBy(queryParams, index) {\r\n    var newParams = queryParams.copy();\r\n    newParams.index_ = index;\r\n    return newParams;\r\n}\r\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @return query string parameters\r\n */\r\nfunction queryParamsToRestQueryStringParameters(queryParams) {\r\n    var qs = {};\r\n    if (queryParams.isDefault()) {\r\n        return qs;\r\n    }\r\n    var orderBy;\r\n    if (queryParams.index_ === PRIORITY_INDEX) {\r\n        orderBy = \"$priority\" /* PRIORITY_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === VALUE_INDEX) {\r\n        orderBy = \"$value\" /* VALUE_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === KEY_INDEX) {\r\n        orderBy = \"$key\" /* KEY_INDEX */;\r\n    }\r\n    else {\r\n        assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n        orderBy = queryParams.index_.toString();\r\n    }\r\n    qs[\"orderBy\" /* ORDER_BY */] = stringify(orderBy);\r\n    if (queryParams.startSet_) {\r\n        qs[\"startAt\" /* START_AT */] = stringify(queryParams.indexStartValue_);\r\n        if (queryParams.startNameSet_) {\r\n            qs[\"startAt\" /* START_AT */] +=\r\n                ',' + stringify(queryParams.indexStartName_);\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        qs[\"endAt\" /* END_AT */] = stringify(queryParams.indexEndValue_);\r\n        if (queryParams.endNameSet_) {\r\n            qs[\"endAt\" /* END_AT */] +=\r\n                ',' + stringify(queryParams.indexEndName_);\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        if (queryParams.isViewFromLeft()) {\r\n            qs[\"limitToFirst\" /* LIMIT_TO_FIRST */] = queryParams.limit_;\r\n        }\r\n        else {\r\n            qs[\"limitToLast\" /* LIMIT_TO_LAST */] = queryParams.limit_;\r\n        }\r\n    }\r\n    return qs;\r\n}\r\nfunction queryParamsGetQueryObject(queryParams) {\r\n    var obj = {};\r\n    if (queryParams.startSet_) {\r\n        obj[\"sp\" /* INDEX_START_VALUE */] =\r\n            queryParams.indexStartValue_;\r\n        if (queryParams.startNameSet_) {\r\n            obj[\"sn\" /* INDEX_START_NAME */] =\r\n                queryParams.indexStartName_;\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        obj[\"ep\" /* INDEX_END_VALUE */] = queryParams.indexEndValue_;\r\n        if (queryParams.endNameSet_) {\r\n            obj[\"en\" /* INDEX_END_NAME */] = queryParams.indexEndName_;\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        obj[\"l\" /* LIMIT */] = queryParams.limit_;\r\n        var viewFrom = queryParams.viewFrom_;\r\n        if (viewFrom === '') {\r\n            if (queryParams.isViewFromLeft()) {\r\n                viewFrom = \"l\" /* VIEW_FROM_LEFT */;\r\n            }\r\n            else {\r\n                viewFrom = \"r\" /* VIEW_FROM_RIGHT */;\r\n            }\r\n        }\r\n        obj[\"vf\" /* VIEW_FROM */] = viewFrom;\r\n    }\r\n    // For now, priority index is the default, so we only specify if it's some other index\r\n    if (queryParams.index_ !== PRIORITY_INDEX) {\r\n        obj[\"i\" /* INDEX */] = queryParams.index_.toString();\r\n    }\r\n    return obj;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\r\n                'endAt(), endBefore(), or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName !== MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName !== MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\r\n                    '(null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\r\n                    'equalTo() cannot be an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\r\n                'limitToFirst() or limitToLast() instead.');\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    Query.prototype.getRef = function () {\r\n        validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        validateCallback('Query.off', 2, callback, true);\r\n        validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Get the server-value for this query, or return a cached value if not connected.\r\n     */\r\n    Query.prototype.get = function () {\r\n        return this.repo.getValue(this);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, failureCallbackOrContext, context) {\r\n        var _this = this;\r\n        validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel) {\r\n                ret.cancel.bind(ret.context)(err);\r\n            }\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, queryParamsLimitToFirst(this.queryParams_, limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, queryParamsLimitToLast(this.queryParams_, limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (pathIsEmpty(parsedPath)) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = queryParamsOrderBy(this.queryParams_, index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = queryParamsOrderBy(this.queryParams_, KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = queryParamsOrderBy(this.queryParams_, PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = queryParamsOrderBy(this.queryParams_, VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = queryParamsStartAt(this.queryParams_, value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    Query.prototype.startAfter = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.startAfter', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAfter', 1, value, this.path, false);\r\n        validateKey('Query.startAfter', 2, name, true);\r\n        var newParams = queryParamsStartAfter(this.queryParams_, value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAfter: Starting point was already set (by another call to startAt, startAfter ' +\r\n                'or equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = queryParamsEndAt(this.queryParams_, value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt, endBefore, or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    Query.prototype.endBefore = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.endBefore', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endBefore', 1, value, this.path, false);\r\n        validateKey('Query.endBefore', 2, name, true);\r\n        var newParams = queryParamsEndBefore(this.queryParams_, value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endBefore: Ending point was already set (by another call to endAt, endBefore, or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + pathToUrlEncodedString(this.path);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return queryParamsGetQueryObject(this.queryParams_);\r\n    };\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = pathEquals(this.path, other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param fnName The function name (on or once)\r\n     *\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ExistingValueProvider = /** @class */ (function () {\r\n    function ExistingValueProvider(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    ExistingValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    };\r\n    ExistingValueProvider.prototype.node = function () {\r\n        return this.node_;\r\n    };\r\n    return ExistingValueProvider;\r\n}());\r\nvar DeferredValueProvider = /** @class */ (function () {\r\n    function DeferredValueProvider(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    DeferredValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var childPath = pathChild(this.path_, childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    };\r\n    DeferredValueProvider.prototype.node = function () {\r\n        return this.syncTree_.calcCompleteEventCache(this.path_);\r\n    };\r\n    return DeferredValueProvider;\r\n}());\r\n/**\r\n * Generate placeholders for deferred values.\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\r\nvar resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nvar resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            assert(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nvar resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    var delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        assert(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    var existingNode = existing.node();\r\n    assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    var leaf = existingNode;\r\n    var existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path path to which write is relative\r\n * @param node new data written at path\r\n * @param syncTree current data\r\n */\r\nvar resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        this.value = null;\r\n        this.children = new Map();\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value != null) {\r\n            return this.value.getChild(path);\r\n        }\r\n        else if (!pathIsEmpty(path) && this.children.size > 0) {\r\n            var childKey = pathGetFront(path);\r\n            path = pathPopFront(path);\r\n            if (this.children.has(childKey)) {\r\n                var childTree = this.children.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @param data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (pathIsEmpty(path)) {\r\n            this.value = data;\r\n            this.children.clear();\r\n        }\r\n        else if (this.value !== null) {\r\n            this.value = this.value.updateChild(path, data);\r\n        }\r\n        else {\r\n            var childKey = pathGetFront(path);\r\n            if (!this.children.has(childKey)) {\r\n                this.children.set(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children.get(childKey);\r\n            path = pathPopFront(path);\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (pathIsEmpty(path)) {\r\n            this.value = null;\r\n            this.children.clear();\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value !== null) {\r\n                if (this.value.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value;\r\n                    this.value = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children.size > 0) {\r\n                var childKey = pathGetFront(path);\r\n                path = pathPopFront(path);\r\n                if (this.children.has(childKey)) {\r\n                    var safeToRemove = this.children.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children.delete(childKey);\r\n                    }\r\n                }\r\n                return this.children.size === 0;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param prefixPath Path to look up node for.\r\n     * @param func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value !== null) {\r\n            func(prefixPath, this.value);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        this.children.forEach(function (tree, key) {\r\n            func(key, tree);\r\n        });\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\nfunction newOperationSourceUser() {\r\n    return {\r\n        fromUser: true,\r\n        fromServer: false,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServer() {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServerTaggedQuery(queryId) {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: queryId,\r\n        tagged: true\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     * @param affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     */\r\n    function AckUserWrite(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = newOperationSourceUser();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!pathIsEmpty(this.path)) {\r\n            assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(newEmptyPath(), childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = new ImmutableTree(null);\r\n        each(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param relativePath The remainder of the path\r\n     * @param predicate The predicate to satisfy to return a node\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: newEmptyPath(), value: this.value };\r\n        }\r\n        else {\r\n            if (pathIsEmpty(relativePath)) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathGetFront(relativePath);\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @return The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param relativePath Path to set value at.\r\n     * @param toSet Value to set.\r\n     * @return Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front) || new ImmutableTree(null);\r\n            var newChild = child.set(pathPopFront(relativePath), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param relativePath Path to value to remove.\r\n     * @return Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            if (this.children.isEmpty()) {\r\n                return new ImmutableTree(null);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(pathPopFront(relativePath));\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return new ImmutableTree(null);\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param relativePath Path to get value for.\r\n     * @return Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param relativePath Path to replace subtree for.\r\n     * @param newTree New tree.\r\n     * @return Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front) || new ImmutableTree(null);\r\n            var newChild = child.setTree(pathPopFront(relativePath), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(newEmptyPath(), fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathIsEmpty(pathToFollow)) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathGetFront(pathToFollow);\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathIsEmpty(pathToFollow)) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathGetFront(pathToFollow);\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param f A function to be called with the path from the root of the tree to\r\n     * a node, and the value at that node. Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(pathChild(currentRelativePath, childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new ListenComplete(this.source, newEmptyPath());\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, pathPopFront(this.path));\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, pathPopFront(this.path), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, newEmptyPath(), childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, newEmptyPath(), childTree);\r\n            }\r\n        }\r\n        else {\r\n            assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, pathPopFront(this.path), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = pathGetFront(path);\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    return ViewCache;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap = new Map();\r\n    }\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey = change.childName;\r\n        assert(type === \"child_added\" /* CHILD_ADDED */ ||\r\n            type === \"child_changed\" /* CHILD_CHANGED */ ||\r\n            type === \"child_removed\" /* CHILD_REMOVED */, 'Only child changes supported for tracking');\r\n        assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type === \"child_added\" /* CHILD_ADDED */ &&\r\n                oldType === \"child_removed\" /* CHILD_REMOVED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    };\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return Array.from(this.changeMap.values());\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        assert(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        assert(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !pathIsEmpty(overwrite.path));\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\r\n                !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(changeValue(newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (pathIsEmpty(changePath)) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = pathGetFront(changePath);\r\n                if (childKey === '.priority') {\r\n                    assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = pathPopFront(changePath);\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (pathIsEmpty(changePath)) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = pathGetFront(changePath);\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                pathGetLength(changePath) > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = pathPopFront(changePath);\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey === '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (pathIsEmpty(changePath)) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = pathGetFront(changePath);\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = pathPopFront(changePath);\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (pathIsEmpty(childChangePath)) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (pathGetBack(childChangePath) === '.priority' &&\r\n                            childNode.getChild(pathParent(childChangePath)).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = pathChild(path, relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, pathGetFront(writePath))) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = pathChild(path, relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, pathGetFront(writePath))) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache.getServerCache().getNode().isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (pathIsEmpty(path)) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (pathIsEmpty(ackPath)) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = new ImmutableTree(null);\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = new ImmutableTree(null);\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = pathChild(ackPath, mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = pathGetFront(path);\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\r\n                }\r\n                else if (viewCache.getEventCache().getNode().hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(newEmptyPath()) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    return EventGenerator;\r\n}());\r\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\r\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\r\n    var events = [];\r\n    var moves = [];\r\n    changes.forEach(function (change) {\r\n        if (change.type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n            eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n            moves.push(changeChildMoved(change.childName, change.snapshotNode));\r\n        }\r\n    });\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\" /* CHILD_REMOVED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\" /* CHILD_ADDED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\" /* CHILD_MOVED */, moves, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\" /* CHILD_CHANGED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\" /* VALUE */, changes, eventRegistrations, eventCache);\r\n    return events;\r\n}\r\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\r\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\r\n    var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n    filteredChanges.sort(function (a, b) {\r\n        return eventGeneratorCompareChanges(eventGenerator, a, b);\r\n    });\r\n    filteredChanges.forEach(function (change) {\r\n        var materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\r\n        registrations.forEach(function (registration) {\r\n            if (registration.respondsTo(change.type)) {\r\n                events.push(registration.createEvent(materializedChange, eventGenerator.query_));\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\r\n    if (change.type === 'value' || change.type === 'child_removed') {\r\n        return change;\r\n    }\r\n    else {\r\n        change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\r\n        return change;\r\n    }\r\n}\r\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\r\n    if (a.childName == null || b.childName == null) {\r\n        throw assertionError('Should only compare child_ events.');\r\n    }\r\n    var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n    var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n    return eventGenerator.index_.compare(aWrapped, bWrapped);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\r\nvar View = /** @class */ (function () {\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = queryParamsGetNodeFilter(params);\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    View.prototype.getCompleteNode = function () {\r\n        return this.viewCache_.getCompleteEventSnap();\r\n    };\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!pathIsEmpty(path) &&\r\n                    !cache.getImmediateChild(pathGetFront(path)).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param eventRegistration If null, remove all callbacks.\r\n     * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(changeChildAdded(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(changeValue(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return eventGeneratorGenerateEventsForChanges(this.eventGenerator_, changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return this.views.size === 0;\r\n    };\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var e_1, _a;\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = this.views.get(queryId);\r\n            assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events = [];\r\n            try {\r\n                for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var view = _c.value;\r\n                    events = events.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Get a view for the specified query.\r\n     *\r\n     * @param query The query to return a view for\r\n     * @param writesCache\r\n     * @param serverCache\r\n     * @param serverCacheComplete\r\n     * @return Events to raise.\r\n     */\r\n    SyncPoint.prototype.getView = function (query, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = this.views.get(queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\r\n            return new View(query, viewCache);\r\n        }\r\n        return view;\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param query\r\n     * @param eventRegistration\r\n     * @param writesCache\r\n     * @param serverCache Complete server cache, if we have it.\r\n     * @param serverCacheComplete\r\n     * @return Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var view = this.getView(query, writesCache, serverCache, serverCacheComplete);\r\n        if (!this.views.has(query.queryIdentifier())) {\r\n            this.views.set(query.queryIdentifier(), view);\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param eventRegistration If null, remove all callbacks.\r\n     * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var e_2, _a;\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            try {\r\n                // When you do ref.off(...), we search all views for the registration to remove.\r\n                for (var _b = __values(this.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var _d = __read(_c.value, 2), viewQueryId = _d[0], view = _d[1];\r\n                    cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                    if (view.isEmpty()) {\r\n                        this.views.delete(viewQueryId);\r\n                        // We'll deal with complete views later.\r\n                        if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                            removed.push(view.getQuery());\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_2) throw e_2.error; }\r\n            }\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = this.views.get(queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    this.views.delete(queryId);\r\n                    // We'll deal with complete views later.\r\n                    if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var e_3, _a;\r\n        var result = [];\r\n        try {\r\n            for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                    result.push(view);\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * @param path The path to the desired complete snapshot\r\n     * @return A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var e_4, _a;\r\n        var serverCache = null;\r\n        try {\r\n            for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                serverCache = serverCache || view.getCompleteServerCache(path);\r\n            }\r\n        }\r\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_4) throw e_4.error; }\r\n        }\r\n        return serverCache;\r\n    };\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return this.views.get(queryId);\r\n        }\r\n    };\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var e_5, _a;\r\n        try {\r\n            for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (view.getQuery().getQueryParams().loadsAllData()) {\r\n                    return view;\r\n                }\r\n            }\r\n        }\r\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_5) throw e_5.error; }\r\n        }\r\n        return null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    CompoundWrite.empty = function () {\r\n        return new CompoundWrite(new ImmutableTree(null));\r\n    };\r\n    return CompoundWrite;\r\n}());\r\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\r\n    if (pathIsEmpty(path)) {\r\n        return new CompoundWrite(new ImmutableTree(node));\r\n    }\r\n    else {\r\n        var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            var rootMostPath = rootmost.path;\r\n            var value = rootmost.value;\r\n            var relativePath = newRelativePath(rootMostPath, path);\r\n            value = value.updateChild(relativePath, node);\r\n            return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\r\n        }\r\n        else {\r\n            var subtree = new ImmutableTree(node);\r\n            var newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    }\r\n}\r\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\r\n    var newWrite = compoundWrite;\r\n    each(updates, function (childKey, node) {\r\n        newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\r\n    });\r\n    return newWrite;\r\n}\r\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite The CompoundWrite to remove.\r\n * @param path The path at which a write and all deeper writes should be removed\r\n * @return The new CompoundWrite with the removed path\r\n */\r\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return CompoundWrite.empty();\r\n    }\r\n    else {\r\n        var newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\r\n        return new CompoundWrite(newWriteTree);\r\n    }\r\n}\r\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite The CompoundWrite to check.\r\n * @param path The path to check for\r\n * @return Whether there is a complete write at that path\r\n */\r\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\r\n    return compoundWriteGetCompleteNode(compoundWrite, path) != null;\r\n}\r\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite The CompoundWrite to get the node from.\r\n * @param path The path to get a complete write\r\n * @return The node if complete at that path, or null otherwise.\r\n */\r\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\r\n    var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n    if (rootmost != null) {\r\n        return compoundWrite.writeTree_\r\n            .get(rootmost.path)\r\n            .getChild(newRelativePath(rootmost.path, path));\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite The CompoundWrite to get children from.\r\n * @return A list of all complete children.\r\n */\r\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\r\n    var children = [];\r\n    var node = compoundWrite.writeTree_.value;\r\n    if (node != null) {\r\n        // If it's a leaf node, it has no children; so nothing to do.\r\n        if (!node.isLeafNode()) {\r\n            node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                children.push(new NamedNode(childName, childNode));\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        compoundWrite.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value != null) {\r\n                children.push(new NamedNode(childName, childTree.value));\r\n            }\r\n        });\r\n    }\r\n    return children;\r\n}\r\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return compoundWrite;\r\n    }\r\n    else {\r\n        var shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\r\n        if (shadowingNode != null) {\r\n            return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n        }\r\n        else {\r\n            return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @return Whether this CompoundWrite is empty\r\n */\r\nfunction compoundWriteIsEmpty(compoundWrite) {\r\n    return compoundWrite.writeTree_.isEmpty();\r\n}\r\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node The node to apply this CompoundWrite to\r\n * @return The node with all writes applied\r\n */\r\nfunction compoundWriteApply(compoundWrite, node) {\r\n    return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\r\n}\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        var priorityWrite_1 = null;\r\n        writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite_1 = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n            node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite_1);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.empty();\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = compoundWriteAddWrite(this.visibleWrites_, path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = compoundWriteAddWrites(this.visibleWrites_, path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @return true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (pathContains(writeToRemove.path, currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = compoundWriteRemoveWrite(this.visibleWrites_, writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                each(children, function (childName) {\r\n                    _this.visibleWrites_ = compoundWriteRemoveWrite(_this.visibleWrites_, pathChild(writeToRemove.path, childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return compoundWriteGetCompleteNode(this.visibleWrites_, path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param writeIdsToExclude An optional set to be excluded\r\n     * @param includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = compoundWriteGetCompleteNode(this.visibleWrites_, treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = compoundWriteChildCompoundWrite(this.visibleWrites_, treePath);\r\n                if (compoundWriteIsEmpty(subMerge)) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return compoundWriteApply(subMerge, layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = compoundWriteChildCompoundWrite(this.visibleWrites_, treePath);\r\n            if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (pathContains(write.path, treePath) ||\r\n                                pathContains(treePath, write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return compoundWriteApply(mergeAtPath, layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = compoundWriteGetCompleteNode(this.visibleWrites_, treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = compoundWriteChildCompoundWrite(this.visibleWrites_, treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = compoundWriteApply(compoundWriteChildCompoundWrite(merge_1, new Path(childName)), childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            compoundWriteGetCompleteChildren(merge_1).forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = compoundWriteChildCompoundWrite(this.visibleWrites_, treePath);\r\n            compoundWriteGetCompleteChildren(merge).forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = pathChild(treePath, childPath);\r\n        if (compoundWriteHasCompleteWrite(this.visibleWrites_, path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = compoundWriteChildCompoundWrite(this.visibleWrites_, path);\r\n            if (compoundWriteIsEmpty(childMerge)) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = pathChild(treePath, childKey);\r\n        var shadowingNode = compoundWriteGetCompleteNode(this.visibleWrites_, path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = compoundWriteChildCompoundWrite(this.visibleWrites_, path);\r\n                return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return compoundWriteGetCompleteNode(this.visibleWrites_, path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = compoundWriteChildCompoundWrite(this.visibleWrites_, treePath);\r\n        var shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = compoundWriteApply(merge, completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return pathContains(writeRecord.path, path);\r\n        }\r\n        else {\r\n            for (var childName in writeRecord.children) {\r\n                if (writeRecord.children.hasOwnProperty(childName) &&\r\n                    pathContains(pathChild(writeRecord.path, childName), path)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, newEmptyPath());\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.empty();\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (pathContains(treeRoot, writePath)) {\r\n                        relativePath = newRelativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\r\n                    }\r\n                    else if (pathContains(writePath, treeRoot)) {\r\n                        relativePath = newRelativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\r\n                    }\r\n                    else ;\r\n                }\r\n                else if (write.children) {\r\n                    if (pathContains(treeRoot, writePath)) {\r\n                        relativePath = newRelativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\r\n                    }\r\n                    else if (pathContains(writePath, treeRoot)) {\r\n                        relativePath = newRelativePath(writePath, treeRoot);\r\n                        if (pathIsEmpty(relativePath)) {\r\n                            compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\r\n                        }\r\n                        else {\r\n                            var child = safeGet(write.children, pathGetFront(relativePath));\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(pathPopFront(relativePath));\r\n                                compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                    else ;\r\n                }\r\n                else {\r\n                    throw assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param writeIdsToExclude Optional writes to exclude.\r\n     * @param includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     *\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(pathChild(this.treePath_, path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(pathChild(this.treePath_, childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = new ImmutableTree(null);\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(newOperationSourceUser(), path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(newOperationSourceUser(), path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param revert True if the given write failed and needs to be reverted\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = new ImmutableTree(null);\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(newEmptyPath(), true);\r\n            }\r\n            else {\r\n                each(write.children, function (pathString) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), true);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(newOperationSourceServer(), path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(newOperationSourceServer(), path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(newOperationSourceServer(), path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = newRelativePath(queryPath, path);\r\n            var op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = newRelativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = newRelativePath(queryPath, path);\r\n            var op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = newRelativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache =\r\n                serverCache || syncPoint.getCompleteServerCache(newEmptyPath());\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(newEmptyPath());\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            assert(!this.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap.set(queryKey, tag);\r\n            this.tagToQueryMap.set(tag, queryKey);\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param eventRegistration If null, all callbacks are removed.\r\n     * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap.get(SyncTree.makeQueryKey_(queryToRemove));\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n     * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n     * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n     *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     *\r\n     * @param path The path to the data we want\r\n     * @param writeIdsToExclude A specific set to be excluded\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = newRelativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    SyncTree.prototype.getServerValue = function (query) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = newRelativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            serverCache =\r\n                serverCache || syncPoint.getCompleteServerCache(newEmptyPath());\r\n        }\r\n        var serverCacheComplete = serverCache != null;\r\n        var serverCacheNode = serverCacheComplete\r\n            ? new CacheNode(serverCache, true, false)\r\n            : null;\r\n        var writesCache = this.pendingWriteTree_.childWrites(query.path);\r\n        var view = syncPoint.getView(query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\r\n        return view.getCompleteNode();\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                each(childMap, function (_key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap.get(removedQueryKey);\r\n                this.queryToTagMap.delete(removedQueryKey);\r\n                this.tagToQueryMap.delete(removedQueryTag);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     *\r\n     * @return The normalized query\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @return This method can return events to support synchronous data sources\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!pathIsEmpty(relativePath) &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    each(childMap, function (_key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap.get(tag);\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return this.queryToTagMap.get(queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n     *\r\n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n     *\r\n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(newEmptyPath()));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (pathIsEmpty(operation.path)) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(newEmptyPath());\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(newEmptyPath());\r\n            }\r\n            var events = [];\r\n            var childName = pathGetFront(operation.path);\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(newEmptyPath());\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(newEmptyPath());\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = __assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        each(stats, function (stat, value) {\r\n            if (value > 0 && contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param eventDataList The new events to queue.\r\n */\r\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\r\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n    var currList = null;\r\n    for (var i = 0; i < eventDataList.length; i++) {\r\n        var data = eventDataList[i];\r\n        var path = data.getPath();\r\n        if (currList !== null && !pathEquals(path, currList.path)) {\r\n            eventQueue.eventLists_.push(currList);\r\n            currList = null;\r\n        }\r\n        if (currList === null) {\r\n            currList = { events: [], path: path };\r\n        }\r\n        currList.events.push(data);\r\n    }\r\n    if (currList) {\r\n        eventQueue.eventLists_.push(currList);\r\n    }\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path The path to raise events for.\r\n * @param eventDataList The new events to raise.\r\n */\r\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\r\n        return pathEquals(eventPath, path);\r\n    });\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath The path to raise events for.\r\n * @param eventDataList The events to raise\r\n */\r\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\r\n        return pathContains(eventPath, changedPath) ||\r\n            pathContains(changedPath, eventPath);\r\n    });\r\n}\r\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\r\n    eventQueue.recursionDepth_++;\r\n    var sentAll = true;\r\n    for (var i = 0; i < eventQueue.eventLists_.length; i++) {\r\n        var eventList = eventQueue.eventLists_[i];\r\n        if (eventList) {\r\n            var eventPath = eventList.path;\r\n            if (predicate(eventPath)) {\r\n                eventListRaise(eventQueue.eventLists_[i]);\r\n                eventQueue.eventLists_[i] = null;\r\n            }\r\n            else {\r\n                sentAll = false;\r\n            }\r\n        }\r\n    }\r\n    if (sentAll) {\r\n        eventQueue.eventLists_ = [];\r\n    }\r\n    eventQueue.recursionDepth_--;\r\n}\r\n/**\r\n * Iterates through the list and raises each event\r\n */\r\nfunction eventListRaise(eventList) {\r\n    for (var i = 0; i < eventList.events.length; i++) {\r\n        var eventData = eventList.events[i];\r\n        if (eventData !== null) {\r\n            eventList.events[i] = null;\r\n            var eventFn = eventData.getEventRunner();\r\n            if (logger) {\r\n                log('event: ' + eventData.toString());\r\n            }\r\n            exceptionGuard(eventFn);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var varArgs = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            varArgs[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = __spread(this.listeners_[eventType]);\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    __extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    __extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.applicationId = applicationId;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 5), command = _a[0], arg1 = _a[1], arg2 = _a[2], arg3 = _a[3], arg4 = _a[4];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 2), pN = _a[0], data = _a[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (_this.applicationId) {\r\n                urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.hostname &&\r\n                FORGE_DOMAIN_RE.test(location.hostname)) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        if (isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param id - The ID of this connection\r\n     * @param pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param url - The URL of the script tag.\r\n     * @param serial - The serial number of the request.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.delete(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param url - The URL for the script tag source.\r\n     * @param loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nvar SDK_VERSION = '';\r\n// SDK_VERSION should be set before any database instance is created\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.applicationId = applicationId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n        this.nodeAdmin = repoInfo.nodeAdmin;\r\n    }\r\n    /**\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return connection url\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.hostname &&\r\n            FORGE_DOMAIN_RE.test(location.hostname)) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (isNodeSdk()) {\r\n                var device = this.nodeAdmin ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                var options = {\r\n                    headers: {\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                _this.log_(error);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param frameCount The number of frames we are expecting from the server\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @return Any remaining data to be process, or null if there is none\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param str String to send.\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var e_1, _a;\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports = (this.transports_ = []);\r\n            try {\r\n                for (var _b = __values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var transport = _c.value;\r\n                    if (transport && transport['isAvailable']()) {\r\n                        transports.push(transport);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return The constructor for the initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return The constructor for the next transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, applicationId_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    };\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ !== 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * @param dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param handshake The handshake data returned from the server\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     * @param everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar GET_CONNECT_TIMEOUT = 3 * 1000;\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    __extends(PersistentConnection, _super);\r\n    /**\r\n     * @param repoInfo_ Data about the namespace we are connecting to\r\n     * @param applicationId_ The Firebase App ID for this project\r\n     * @param onDataUpdate_ A callback for new data from the server\r\n     */\r\n    function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.applicationId_ = applicationId_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        _this.interruptReasons_ = {};\r\n        /** Map<path, Map<queryId, ListenSpec>> */\r\n        _this.listens = new Map();\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingGets_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.outstandingGetCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        _this.establishConnectionTimer_ = null;\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        _this.realtime_ = null;\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(stringify(msg));\r\n        assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    PersistentConnection.prototype.get = function (query) {\r\n        var _this = this;\r\n        var deferred = new Deferred();\r\n        var request = {\r\n            p: query.path.toString(),\r\n            q: query.queryObject()\r\n        };\r\n        var outstandingGet = {\r\n            action: 'g',\r\n            request: request,\r\n            onComplete: function (message) {\r\n                var payload = message['d'];\r\n                if (message['s'] === 'ok') {\r\n                    _this.onDataUpdate_(request['p'], payload, \r\n                    /*isMerge*/ false, \r\n                    /*tag*/ null);\r\n                    deferred.resolve(payload);\r\n                }\r\n                else {\r\n                    deferred.reject(payload);\r\n                }\r\n            }\r\n        };\r\n        this.outstandingGets_.push(outstandingGet);\r\n        this.outstandingGetCount_++;\r\n        var index = this.outstandingGets_.length - 1;\r\n        if (!this.connected_) {\r\n            setTimeout(function () {\r\n                var get = _this.outstandingGets_[index];\r\n                if (get === undefined || outstandingGet !== get) {\r\n                    return;\r\n                }\r\n                delete _this.outstandingGets_[index];\r\n                _this.outstandingGetCount_--;\r\n                if (_this.outstandingGetCount_ === 0) {\r\n                    _this.outstandingGets_ = [];\r\n                }\r\n                _this.log_('get ' + index + ' timed out on connection');\r\n                deferred.reject(new Error('Client is offline.'));\r\n            }, GET_CONNECT_TIMEOUT);\r\n        }\r\n        if (this.connected_) {\r\n            this.sendGet_(index);\r\n        }\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendGet_ = function (index) {\r\n        var _this = this;\r\n        var get = this.outstandingGets_[index];\r\n        this.sendRequest('g', get.request, function (message) {\r\n            delete _this.outstandingGets_[index];\r\n            _this.outstandingGetCount_--;\r\n            if (_this.outstandingGetCount_ === 0) {\r\n                _this.outstandingGets_ = [];\r\n            }\r\n            if (get.onComplete) {\r\n                get.onComplete(message);\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens.get(pathString) &&\r\n                _this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var warnings = safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    };\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        var _this = this;\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, self_1.applicationId_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error) {\r\n                self_1.log_('Failed to get token: ' + error);\r\n                if (!canceled_1) {\r\n                    if (_this.repoInfo_.nodeAdmin) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            var map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var e_1, _a, e_2, _b;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        try {\r\n            // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n            // make sure to send listens before puts.\r\n            for (var _c = __values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var queries = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, __values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var listenSpec = _f.value;\r\n                        this.sendListen_(listenSpec);\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n        for (var i = 0; i < this.outstandingGets_.length; i++) {\r\n            if (this.outstandingGets_[i]) {\r\n                this.sendGet_(i);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (isNodeSdk()) {\r\n            if (this.repoInfo_.nodeAdmin) {\r\n                clientName = 'admin_node';\r\n            }\r\n            else {\r\n                clientName = 'node';\r\n            }\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    __extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param repoInfo_ Data about the namespace we are connecting to\r\n     * @param onDataUpdate_ A callback for new data from the server\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = queryParamsToRestQueryStringParameters(query.getQueryParams());\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    ReadonlyRestClient.prototype.get = function (query) {\r\n        var _this = this;\r\n        var queryStringParameters = queryParamsToRestQueryStringParameters(query.getQueryParams());\r\n        var pathString = query.path.toString();\r\n        var deferred = new Deferred();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, \r\n                /*isMerge=*/ false, \r\n                /*tag=*/ null);\r\n                deferred.resolve(data);\r\n            }\r\n            else {\r\n                deferred.reject(new Error(data));\r\n            }\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @param name_ Optional name of the node.\r\n     * @param parent_ Optional parent node.\r\n     * @param node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param pathObj Path to look up.\r\n     * @return Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next = pathGetFront(path);\r\n        while (next !== null) {\r\n            var childNode = safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = pathPopFront(path);\r\n            next = pathGetFront(path);\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return Whethe rthe tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        each(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param action Action to be called for each child.\r\n     * @param includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst) {\r\n            action(this);\r\n        }\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst) {\r\n            action(this);\r\n        }\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param includeSelf Whether to call action on this node as well.\r\n     * @return true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null) {\r\n                action(child);\r\n            }\r\n            else {\r\n                child.forEachImmediateDescendantWithValue(action);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @return The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null) {\r\n            this.parent_.updateChild_(this.name_, this);\r\n        }\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param childName The name of the child to update.\r\n     * @param child The child to update.\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\r\nvar MAX_TRANSACTION_RETRIES = 25;\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    function Repo(repoInfo_, forceRestClient_, app, authTokenProvider_) {\r\n        this.repoInfo_ = repoInfo_;\r\n        this.forceRestClient_ = forceRestClient_;\r\n        this.app = app;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        /** Stores queues of outstanding transactions for Firebase locations. */\r\n        this.transactionQueueTree_ = new Tree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        // This key is intentionally not updated if RepoInfo is later changed or replaced\r\n        this.key = this.repoInfo_.toURLString();\r\n    }\r\n    Repo.prototype.start = function () {\r\n        var _this = this;\r\n        this.stats_ = StatsManager.getCollection(this.repoInfo_);\r\n        if (this.forceRestClient_ || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), this.authTokenProvider_);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = this.app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.app.options.appId, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), this.authTokenProvider_, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        this.authTokenProvider_.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(this.repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    eventQueueRaiseEventsForChangedPath(_this.eventQueue_, query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @return The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        eventQueueRaiseEventsForChangedPath(this.eventQueue_, affectedPath, events);\r\n    };\r\n    // TODO: This should be @private but it's used by test_access.js and internal.js\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (key, value) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        eventQueueRaiseEventsForChangedPath(this.eventQueue_, path, events);\r\n    };\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    /**\r\n     * The purpose of `getValue` is to return the latest known value\r\n     * satisfying `query`.\r\n     *\r\n     * This method will first check for in-memory cached values\r\n     * belonging to active listeners. If they are found, such values\r\n     * are considered to be the most up-to-date.\r\n     *\r\n     * If the client is not connected, this method will try to\r\n     * establish a connection and request the value for `query`. If\r\n     * the client is not able to retrieve the query result, it reports\r\n     * an error.\r\n     *\r\n     * @param query - The query to surface a value for.\r\n     */\r\n    Repo.prototype.getValue = function (query) {\r\n        var _this = this;\r\n        // Only active queries are cached. There is no persisted cache.\r\n        var cached = this.serverSyncTree_.getServerValue(query);\r\n        if (cached != null) {\r\n            return Promise.resolve(new DataSnapshot(cached, query.getRef(), query.getQueryParams().getIndex()));\r\n        }\r\n        return this.server_.get(query).then(function (payload) {\r\n            var node = nodeFromJSON$1(payload);\r\n            var events = _this.serverSyncTree_.applyServerOverwrite(query.path, node);\r\n            eventQueueRaiseEventsAtPath(_this.eventQueue_, query.path, events);\r\n            return Promise.resolve(new DataSnapshot(node, query.getRef(), query.getQueryParams().getIndex()));\r\n        }, function (err) {\r\n            _this.log_('get for query ' + stringify(query) + ' failed: ' + err);\r\n            return Promise.reject(new Error(err));\r\n        });\r\n    };\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var existing = this.serverSyncTree_.calcCompleteEventCache(path);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        eventQueueQueueEvents(this.eventQueue_, events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            eventQueueRaiseEventsForChangedPath(_this.eventQueue_, path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        eventQueueRaiseEventsForChangedPath(this.eventQueue_, affectedPath, []);\r\n    };\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        each(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON$1(changedValue), _this.serverSyncTree_, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            eventQueueQueueEvents(this.eventQueue_, events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                eventQueueRaiseEventsForChangedPath(_this.eventQueue_, affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            each(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(pathChild(path, changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            eventQueueRaiseEventsForChangedPath(this.eventQueue_, path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = new SparseSnapshotTree();\r\n        this.onDisconnect_.forEachTree(newEmptyPath(), function (path, node) {\r\n            var resolved = resolveDeferredValueTree(path, node, _this.serverSyncTree_, serverValues);\r\n            resolvedOnDisconnectTree.remember(path, resolved);\r\n        });\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(newEmptyPath(), function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        eventQueueRaiseEventsForChangedPath(this.eventQueue_, newEmptyPath(), events);\r\n    };\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                each(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(pathChild(path, childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (pathGetFront(query.path) === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        eventQueueRaiseEventsAtPath(this.eventQueue_, query.path, events);\r\n    };\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (pathGetFront(query.path) === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        eventQueueRaiseEventsAtPath(this.eventQueue_, query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined') {\r\n            return;\r\n        }\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_) {\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            }\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        each(stats, function (stat, value) {\r\n            var paddedStat = stat;\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++) {\r\n                paddedStat += ' ';\r\n            }\r\n            console.log(paddedStat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    Repo.prototype.log_ = function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, __spread([prefix], varArgs));\r\n    };\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status === 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason) {\r\n                        message += ': ' + errorReason;\r\n                    }\r\n                    var error = new Error(message);\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    error.code = code;\r\n                    callback(error);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new transaction, adds it to the transactions we're tracking, and\r\n     * sends it to the server if possible.\r\n     *\r\n     * @param path Path at which to do transaction.\r\n     * @param transactionUpdate Update callback.\r\n     * @param onComplete Completion callback.\r\n     * @param applyLocally Whether or not to make intermediate results visible\r\n     */\r\n    Repo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n        this.log_('transaction on ' + path);\r\n        // Add a watch to make sure we get server updates.\r\n        var valueCallback = function () { };\r\n        var watchRef = new Reference(this, path);\r\n        watchRef.on('value', valueCallback);\r\n        var unwatcher = function () {\r\n            watchRef.off('value', valueCallback);\r\n        };\r\n        // Initialize transaction.\r\n        var transaction = {\r\n            path: path,\r\n            update: transactionUpdate,\r\n            onComplete: onComplete,\r\n            // One of TransactionStatus enums.\r\n            status: null,\r\n            // Used when combining transactions at different locations to figure out\r\n            // which one goes first.\r\n            order: LUIDGenerator(),\r\n            // Whether to raise local events for this transaction.\r\n            applyLocally: applyLocally,\r\n            // Count of how many times we've retried the transaction.\r\n            retryCount: 0,\r\n            // Function to call to clean up our .on() listener.\r\n            unwatcher: unwatcher,\r\n            // Stores why a transaction was aborted.\r\n            abortReason: null,\r\n            currentWriteId: null,\r\n            currentInputSnapshot: null,\r\n            currentOutputSnapshotRaw: null,\r\n            currentOutputSnapshotResolved: null\r\n        };\r\n        // Run transaction initially.\r\n        var currentState = this.getLatestState_(path);\r\n        transaction.currentInputSnapshot = currentState;\r\n        var newVal = transaction.update(currentState.val());\r\n        if (newVal === undefined) {\r\n            // Abort transaction.\r\n            transaction.unwatcher();\r\n            transaction.currentOutputSnapshotRaw = null;\r\n            transaction.currentOutputSnapshotResolved = null;\r\n            if (transaction.onComplete) {\r\n                // We just set the input snapshot, so this cast should be safe\r\n                var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n                transaction.onComplete(null, false, snapshot);\r\n            }\r\n        }\r\n        else {\r\n            validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n            // Mark as run and add to our queue.\r\n            transaction.status = TransactionStatus.RUN;\r\n            var queueNode = this.transactionQueueTree_.subTree(path);\r\n            var nodeQueue = queueNode.getValue() || [];\r\n            nodeQueue.push(transaction);\r\n            queueNode.setValue(nodeQueue);\r\n            // Update visibleData and raise events\r\n            // Note: We intentionally raise events after updating all of our\r\n            // transaction state, since the user could start new transactions from the\r\n            // event callbacks.\r\n            var priorityForNode = void 0;\r\n            if (typeof newVal === 'object' &&\r\n                newVal !== null &&\r\n                contains(newVal, '.priority')) {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                priorityForNode = safeGet(newVal, '.priority');\r\n                assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                    'Priority must be a valid string, finite number, server value, or null.');\r\n            }\r\n            else {\r\n                var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                    ChildrenNode.EMPTY_NODE;\r\n                priorityForNode = currentNode.getPriority().val();\r\n            }\r\n            var serverValues = this.generateServerValues();\r\n            var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n            var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n            transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n            transaction.currentOutputSnapshotResolved = newNode;\r\n            transaction.currentWriteId = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n            eventQueueRaiseEventsForChangedPath(this.eventQueue_, path, events);\r\n            this.sendReadyTransactions_();\r\n        }\r\n    };\r\n    /**\r\n     * @param excludeSets A specific set to exclude\r\n     */\r\n    Repo.prototype.getLatestState_ = function (path, excludeSets) {\r\n        return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n            ChildrenNode.EMPTY_NODE);\r\n    };\r\n    /**\r\n     * Sends any already-run transactions that aren't waiting for outstanding\r\n     * transactions to complete.\r\n     *\r\n     * Externally it's called with no arguments, but it calls itself recursively\r\n     * with a particular transactionQueueTree node to recurse through the tree.\r\n     *\r\n     * @param node transactionQueueTree node to start at.\r\n     */\r\n    Repo.prototype.sendReadyTransactions_ = function (node) {\r\n        var _this = this;\r\n        if (node === void 0) { node = this.transactionQueueTree_; }\r\n        // Before recursing, make sure any completed transactions are removed.\r\n        if (!node) {\r\n            this.pruneCompletedTransactionsBelowNode_(node);\r\n        }\r\n        if (node.getValue() !== null) {\r\n            var queue = this.buildTransactionQueue_(node);\r\n            assert(queue.length > 0, 'Sending zero length transaction queue');\r\n            var allRun = queue.every(function (transaction) {\r\n                return transaction.status === TransactionStatus.RUN;\r\n            });\r\n            // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n            if (allRun) {\r\n                this.sendTransactionQueue_(node.path(), queue);\r\n            }\r\n        }\r\n        else if (node.hasChildren()) {\r\n            node.forEachChild(function (childNode) {\r\n                _this.sendReadyTransactions_(childNode);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Given a list of run transactions, send them to the server and then handle\r\n     * the result (success or failure).\r\n     *\r\n     * @param path The location of the queue.\r\n     * @param queue Queue of transactions under the specified location.\r\n     */\r\n    Repo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n        var _this = this;\r\n        // Mark transactions as sent and increment retry count!\r\n        var setsToIgnore = queue.map(function (txn) {\r\n            return txn.currentWriteId;\r\n        });\r\n        var latestState = this.getLatestState_(path, setsToIgnore);\r\n        var snapToSend = latestState;\r\n        var latestHash = latestState.hash();\r\n        for (var i = 0; i < queue.length; i++) {\r\n            var txn = queue[i];\r\n            assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n            txn.status = TransactionStatus.SENT;\r\n            txn.retryCount++;\r\n            var relativePath = newRelativePath(path, txn.path);\r\n            // If we've gotten to this point, the output snapshot must be defined.\r\n            snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n        }\r\n        var dataToSend = snapToSend.val(true);\r\n        var pathToSend = path;\r\n        // Send the put.\r\n        this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n            _this.log_('transaction put response', {\r\n                path: pathToSend.toString(),\r\n                status: status\r\n            });\r\n            var events = [];\r\n            if (status === 'ok') {\r\n                // Queue up the callbacks and fire them after cleaning up all of our\r\n                // transaction state, since the callback could trigger more\r\n                // transactions or sets.\r\n                var callbacks = [];\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.COMPLETED;\r\n                    events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                    if (queue[i].onComplete) {\r\n                        // We never unset the output snapshot, and given that this\r\n                        // transaction is complete, it should be set\r\n                        var node = queue[i].currentOutputSnapshotResolved;\r\n                        var ref = new Reference(_this, queue[i].path);\r\n                        var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                        callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                    }\r\n                    queue[i].unwatcher();\r\n                }\r\n                // Now remove the completed transactions.\r\n                _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n                // There may be pending transactions that we can now send.\r\n                _this.sendReadyTransactions_();\r\n                eventQueueRaiseEventsForChangedPath(_this.eventQueue_, path, events);\r\n                // Finally, trigger onComplete callbacks.\r\n                for (var i = 0; i < callbacks.length; i++) {\r\n                    exceptionGuard(callbacks[i]);\r\n                }\r\n            }\r\n            else {\r\n                // transactions are no longer sent.  Update their status appropriately.\r\n                if (status === 'datastale') {\r\n                    for (var i = 0; i < queue.length; i++) {\r\n                        if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                            queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                        }\r\n                        else {\r\n                            queue[i].status = TransactionStatus.RUN;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                    for (var i = 0; i < queue.length; i++) {\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                        queue[i].abortReason = status;\r\n                    }\r\n                }\r\n                _this.rerunTransactions_(path);\r\n            }\r\n        }, latestHash);\r\n    };\r\n    /**\r\n     * Finds all transactions dependent on the data at changedPath and reruns them.\r\n     *\r\n     * Should be called any time cached data changes.\r\n     *\r\n     * Return the highest path that was affected by rerunning transactions. This\r\n     * is the path at which events need to be raised for.\r\n     *\r\n     * @param changedPath The path in mergedData that changed.\r\n     * @return The rootmost path that was affected by rerunning transactions.\r\n     */\r\n    Repo.prototype.rerunTransactions_ = function (changedPath) {\r\n        var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n        var path = rootMostTransactionNode.path();\r\n        var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n        this.rerunTransactionQueue_(queue, path);\r\n        return path;\r\n    };\r\n    /**\r\n     * Does all the work of rerunning transactions (as well as cleans up aborted\r\n     * transactions and whatnot).\r\n     *\r\n     * @param queue The queue of transactions to run.\r\n     * @param path The path the queue is for.\r\n     */\r\n    Repo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n        if (queue.length === 0) {\r\n            return; // Nothing to do!\r\n        }\r\n        // Queue up the callbacks and fire them after cleaning up all of our\r\n        // transaction state, since the callback could trigger more transactions or\r\n        // sets.\r\n        var callbacks = [];\r\n        var events = [];\r\n        // Ignore all of the sets we're going to re-run.\r\n        var txnsToRerun = queue.filter(function (q) {\r\n            return q.status === TransactionStatus.RUN;\r\n        });\r\n        var setsToIgnore = txnsToRerun.map(function (q) {\r\n            return q.currentWriteId;\r\n        });\r\n        for (var i = 0; i < queue.length; i++) {\r\n            var transaction = queue[i];\r\n            var relativePath = newRelativePath(path, transaction.path);\r\n            var abortTransaction = false, abortReason = void 0;\r\n            assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n            if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n                abortTransaction = true;\r\n                abortReason = transaction.abortReason;\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else if (transaction.status === TransactionStatus.RUN) {\r\n                if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\r\n                    abortTransaction = true;\r\n                    abortReason = 'maxretry';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n                else {\r\n                    // This code reruns a transaction\r\n                    var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                    transaction.currentInputSnapshot = currentNode;\r\n                    var newData = queue[i].update(currentNode.val());\r\n                    if (newData !== undefined) {\r\n                        validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                        var newDataNode = nodeFromJSON$1(newData);\r\n                        var hasExplicitPriority = typeof newData === 'object' &&\r\n                            newData != null &&\r\n                            contains(newData, '.priority');\r\n                        if (!hasExplicitPriority) {\r\n                            // Keep the old priority if there wasn't a priority explicitly specified.\r\n                            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                        }\r\n                        var oldWriteId = transaction.currentWriteId;\r\n                        var serverValues = this.generateServerValues();\r\n                        var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                        transaction.currentOutputSnapshotRaw = newDataNode;\r\n                        transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                        transaction.currentWriteId = this.getNextWriteId_();\r\n                        // Mutates setsToIgnore in place\r\n                        setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                        events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                        events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                    }\r\n                    else {\r\n                        abortTransaction = true;\r\n                        abortReason = 'nodata';\r\n                        events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                    }\r\n                }\r\n            }\r\n            eventQueueRaiseEventsForChangedPath(this.eventQueue_, path, events);\r\n            events = [];\r\n            if (abortTransaction) {\r\n                // Abort.\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                // Removing a listener can trigger pruning which can muck with\r\n                // mergedData/visibleData (as it prunes data). So defer the unwatcher\r\n                // until we're done.\r\n                (function (unwatcher) {\r\n                    setTimeout(unwatcher, Math.floor(0));\r\n                })(queue[i].unwatcher);\r\n                if (queue[i].onComplete) {\r\n                    if (abortReason === 'nodata') {\r\n                        var ref = new Reference(this, queue[i].path);\r\n                        // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                        var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                        var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                        callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                    }\r\n                    else {\r\n                        callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Clean up completed transactions.\r\n        this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n        // Now fire callbacks, now that we're in a good, known state.\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n        // Try to send the transaction result to the server.\r\n        this.sendReadyTransactions_();\r\n    };\r\n    /**\r\n     * Returns the rootmost ancestor node of the specified path that has a pending\r\n     * transaction on it, or just returns the node for the given path if there are\r\n     * no pending transactions on any ancestor.\r\n     *\r\n     * @param path The location to start at.\r\n     * @return The rootmost node with a transaction.\r\n     */\r\n    Repo.prototype.getAncestorTransactionNode_ = function (path) {\r\n        var front;\r\n        // Start at the root and walk deeper into the tree towards path until we\r\n        // find a node with pending transactions.\r\n        var transactionNode = this.transactionQueueTree_;\r\n        front = pathGetFront(path);\r\n        while (front !== null && transactionNode.getValue() === null) {\r\n            transactionNode = transactionNode.subTree(front);\r\n            path = pathPopFront(path);\r\n            front = pathGetFront(path);\r\n        }\r\n        return transactionNode;\r\n    };\r\n    /**\r\n     * Builds the queue of all transactions at or below the specified\r\n     * transactionNode.\r\n     *\r\n     * @param transactionNode\r\n     * @return The generated queue.\r\n     */\r\n    Repo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n        // Walk any child transaction queues and aggregate them into a single queue.\r\n        var transactionQueue = [];\r\n        this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n        // Sort them by the order the transactions were created.\r\n        transactionQueue.sort(function (a, b) {\r\n            return a.order - b.order;\r\n        });\r\n        return transactionQueue;\r\n    };\r\n    Repo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n        var _this = this;\r\n        var nodeQueue = node.getValue();\r\n        if (nodeQueue !== null) {\r\n            for (var i = 0; i < nodeQueue.length; i++) {\r\n                queue.push(nodeQueue[i]);\r\n            }\r\n        }\r\n        node.forEachChild(function (child) {\r\n            _this.aggregateTransactionQueuesForNode_(child, queue);\r\n        });\r\n    };\r\n    /**\r\n     * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n     */\r\n    Repo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n        var _this = this;\r\n        var queue = node.getValue();\r\n        if (queue) {\r\n            var to = 0;\r\n            for (var from = 0; from < queue.length; from++) {\r\n                if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                    queue[to] = queue[from];\r\n                    to++;\r\n                }\r\n            }\r\n            queue.length = to;\r\n            node.setValue(queue.length > 0 ? queue : null);\r\n        }\r\n        node.forEachChild(function (childNode) {\r\n            _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n        });\r\n    };\r\n    /**\r\n     * Aborts all transactions on ancestors or descendants of the specified path.\r\n     * Called when doing a set() or update() since we consider them incompatible\r\n     * with transactions.\r\n     *\r\n     * @param path Path for which we want to abort related transactions.\r\n     */\r\n    Repo.prototype.abortTransactions_ = function (path) {\r\n        var _this = this;\r\n        var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n        var transactionNode = this.transactionQueueTree_.subTree(path);\r\n        transactionNode.forEachAncestor(function (node) {\r\n            _this.abortTransactionsOnNode_(node);\r\n        });\r\n        this.abortTransactionsOnNode_(transactionNode);\r\n        transactionNode.forEachDescendant(function (node) {\r\n            _this.abortTransactionsOnNode_(node);\r\n        });\r\n        return affectedPath;\r\n    };\r\n    /**\r\n     * Abort transactions stored in this transaction queue node.\r\n     *\r\n     * @param node Node to abort transactions for.\r\n     */\r\n    Repo.prototype.abortTransactionsOnNode_ = function (node) {\r\n        var queue = node.getValue();\r\n        if (queue !== null) {\r\n            // Queue up the callbacks and fire them after cleaning up all of our\r\n            // transaction state, since the callback could trigger more transactions\r\n            // or sets.\r\n            var callbacks = [];\r\n            // Go through queue.  Any already-sent transactions must be marked for\r\n            // abort, while the unsent ones can be immediately aborted and removed.\r\n            var events = [];\r\n            var lastSent = -1;\r\n            for (var i = 0; i < queue.length; i++) {\r\n                if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;\r\n                else if (queue[i].status === TransactionStatus.SENT) {\r\n                    assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                    lastSent = i;\r\n                    // Mark transaction for abort when it comes back.\r\n                    queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                    queue[i].abortReason = 'set';\r\n                }\r\n                else {\r\n                    assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                    // We can abort it immediately.\r\n                    queue[i].unwatcher();\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                    if (queue[i].onComplete) {\r\n                        var snapshot = null;\r\n                        callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                    }\r\n                }\r\n            }\r\n            if (lastSent === -1) {\r\n                // We're not waiting for any sent transactions.  We can clear the queue.\r\n                node.setValue(null);\r\n            }\r\n            else {\r\n                // Remove the transactions we aborted.\r\n                queue.length = lastSent + 1;\r\n            }\r\n            // Now fire the callbacks.\r\n            eventQueueRaiseEventsForChangedPath(this.eventQueue_, node.path(), events);\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n    };\r\n    return Repo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    __extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, new QueryParams(), false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (pathIsEmpty(this.path)) {\r\n            return null;\r\n        }\r\n        else {\r\n            return pathGetBack(this.path);\r\n        }\r\n    };\r\n    Reference.prototype.child = function (pathString) {\r\n        validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (pathGetFront(this.path) === null) {\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            }\r\n            else {\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n            }\r\n        }\r\n        return new Reference(this.repo, pathChild(this.path, pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = pathParent(this.path);\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw ('Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.');\r\n        }\r\n        var deferred = new Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    Reference.prototype.remove = function (onComplete) {\r\n        validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw ('Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.');\r\n        }\r\n        if (applyLocally === undefined) {\r\n            applyLocally = true;\r\n        }\r\n        var deferred = new Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error, committed, snapshot) {\r\n            if (error) {\r\n                deferred.reject(error);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo.setWithPriority(pathChild(this.path, '.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar FirebaseAuthTokenProvider = /** @class */ (function () {\r\n    function FirebaseAuthTokenProvider(app_, authProvider_) {\r\n        var _this = this;\r\n        this.app_ = app_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.get().then(function (auth) { return (_this.auth_ = auth); });\r\n        }\r\n    }\r\n    FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        if (!this.auth_) {\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(function (error) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            setTimeout(function () { return listener(null); }, 0);\r\n            this.authProvider_\r\n                .get()\r\n                .then(function (auth) { return auth.addAuthTokenListener(listener); });\r\n        }\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(function (auth) { return auth.removeAuthTokenListener(listener); });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return FirebaseAuthTokenProvider;\r\n}());\r\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\r\nvar EmulatorAdminTokenProvider = /** @class */ (function () {\r\n    function EmulatorAdminTokenProvider() {\r\n    }\r\n    EmulatorAdminTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return Promise.resolve({\r\n            accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\r\n        });\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // Invoke the listener immediately to match the behavior in Firebase Auth\r\n        // (see packages/auth/src/auth.js#L1807)\r\n        listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.removeTokenChangeListener = function (listener) { };\r\n    EmulatorAdminTokenProvider.prototype.notifyForInvalidToken = function () { };\r\n    EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN = 'owner';\r\n    return EmulatorAdminTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        var e_1, _a, e_2, _b;\r\n        try {\r\n            for (var _c = __values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, __values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].interrupt();\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        var e_3, _a, e_4, _b;\r\n        try {\r\n            for (var _c = __values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_4 = void 0, __values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].resume();\r\n                    }\r\n                }\r\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_4) throw e_4.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n    };\r\n    /**\r\n     * Update an existing repo in place to point to a new host/port.\r\n     */\r\n    RepoManager.prototype.applyEmulatorSettings = function (repo, host, port) {\r\n        repo.repoInfo_ = new RepoInfo(host + \":\" + port, \r\n        /* secure= */ false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\r\n        if (repo.repoInfo_.nodeAdmin) {\r\n            repo.authTokenProvider_ = new EmulatorAdminTokenProvider();\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, authProvider, url, nodeAdmin) {\r\n        var dbUrl = url || app.options.databaseURL;\r\n        if (dbUrl === undefined) {\r\n            if (!app.options.projectId) {\r\n                fatal(\"Can't determine Firebase Database URL. Be sure to include \" +\r\n                    ' a Project ID when calling firebase.initializeApp().');\r\n            }\r\n            log('Using default host for project ', app.options.projectId);\r\n            dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        var isEmulator;\r\n        var dbEmulatorHost = undefined;\r\n        if (typeof process !== 'undefined') {\r\n            dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n        }\r\n        if (dbEmulatorHost) {\r\n            isEmulator = true;\r\n            dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\r\n            parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n            repoInfo = parsedUrl.repoInfo;\r\n        }\r\n        else {\r\n            isEmulator = !parsedUrl.repoInfo.secure;\r\n        }\r\n        var authTokenProvider = nodeAdmin && isEmulator\r\n            ? new EmulatorAdminTokenProvider()\r\n            : new FirebaseAuthTokenProvider(app, authProvider);\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!pathIsEmpty(parsedUrl.path)) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app, authTokenProvider);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || safeGet(appRepos, repo.key) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.key];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param repoInfo The metadata about the Repo\r\n     * @return The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app, authTokenProvider) {\r\n        var appRepos = safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app, authTokenProvider);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     */\r\n    function Database(repoInternal_) {\r\n        var _this = this;\r\n        this.repoInternal_ = repoInternal_;\r\n        /** Track if the instance has been used (root or repo accessed) */\r\n        this.instanceStarted_ = false;\r\n        this.INTERNAL = {\r\n            delete: function () { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    this.checkDeleted_('delete');\r\n                    RepoManager.getInstance().deleteRepo(this.repo_);\r\n                    this.repoInternal_ = null;\r\n                    this.rootInternal_ = null;\r\n                    return [2 /*return*/];\r\n                });\r\n            }); }\r\n        };\r\n        if (!(repoInternal_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n    }\r\n    Object.defineProperty(Database.prototype, \"repo_\", {\r\n        get: function () {\r\n            if (!this.instanceStarted_) {\r\n                this.repoInternal_.start();\r\n                this.instanceStarted_ = true;\r\n            }\r\n            return this.repoInternal_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Database.prototype, \"root_\", {\r\n        get: function () {\r\n            if (!this.rootInternal_) {\r\n                this.rootInternal_ = new Reference(this.repo_, newEmptyPath());\r\n            }\r\n            return this.rootInternal_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Modify this instance to communicate with the Realtime Database emulator.\r\n     *\r\n     * <p>Note: This method must be called before performing any other operation.\r\n     *\r\n     * @param host the emulator host (ex: localhost)\r\n     * @param port the emulator port (ex: 8080)\r\n     */\r\n    Database.prototype.useEmulator = function (host, port) {\r\n        this.checkDeleted_('useEmulator');\r\n        if (this.instanceStarted_) {\r\n            fatal('Cannot call useEmulator() after instance has already been initialized.');\r\n            return;\r\n        }\r\n        // Modify the repo to apply emulator settings\r\n        RepoManager.getInstance().applyEmulatorSettings(this.repoInternal_, host, port);\r\n    };\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @return Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url, this.repo_.repoInfo_.nodeAdmin);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (!this.repo_.repoInfo_.isCustomHost() &&\r\n            repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repoInternal_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        },\r\n        increment: function (delta) {\r\n            return {\r\n                '.sv': {\r\n                    'increment': delta\r\n                }\r\n            };\r\n        }\r\n    };\r\n    return Database;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\r\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app A valid FirebaseApp-like object\r\n * @param url A valid Firebase databaseURL\r\n * @param version custom version e.g. firebase-admin version\r\n * @param customAuthImpl custom auth implementation\r\n */\r\nfunction initStandalone(_a) {\r\n    var app = _a.app, url = _a.url, version = _a.version, customAuthImpl = _a.customAuthImpl, namespace = _a.namespace, _b = _a.nodeAdmin, nodeAdmin = _b === void 0 ? false : _b;\r\n    setSDKVersion(version);\r\n    /**\r\n     * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n     * any actual function.\r\n     */\r\n    var authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\r\n    authProvider.setComponent(new Component('auth-internal', function () { return customAuthImpl; }, \"PRIVATE\" /* PRIVATE */));\r\n    return {\r\n        instance: RepoManager.getInstance().databaseFromApp(app, authProvider, url, nodeAdmin),\r\n        namespace: namespace\r\n    };\r\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData,\n  initStandalone: initStandalone\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\nvar ConnectionTarget = RepoInfo;\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n\nvar name = \"@firebase/database\";\nvar version = \"0.9.4\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // set SDK_VERSION\r\n    setSDKVersion(instance.SDK_VERSION);\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerComponent(new Component('database', function (container, url) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        return RepoManager.getInstance().databaseFromApp(app, authProvider, url);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(\r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        DataSnapshot: DataSnapshot,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    })\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n    if (isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexport { DataSnapshot, Database, OnDisconnect, Query, Reference, ServerValue, enableLogging, registerDatabase };\n//# sourceMappingURL=index.esm.js.map\n"],"sourceRoot":""}