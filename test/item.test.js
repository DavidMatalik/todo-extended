const Item = require('../src/itemmodel')
const assert = require('assert').strict

describe('integration test', function () {
  describe('title tests', function () {
    xit('should be able to get the title', function () {
      const item = new Item('myItem')
      const title = item.getTitle()
      assert.strictEqual(title, 'myItem')
    })

    xit('should be able to change the title', function () {
      const item = new Item('myItem')
      item.setTitle('myChangedItem')
      const title = item.getTitle()
      assert.strictEqual(title, 'myChangedItem')
    })

    xit('should throw error if more than 255 title chars', function () {
      const createError = () => {
        const item = new Item('More then 255 a\'s: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa')
      }
      assert.throws(createError, new Error('too many characters'))
    })

    xit('should throw error if no title chars', function () {
      const createError = () => {
        const item = new Item('')
      }
      assert.throws(createError, new Error('no characters'))
    })
  })

  describe('id tests', function() {
    xit('should be able to create the id', function () {
      // Generate id by id generator 
      // 1: https://github.com/uuidjs/uuid
      // 2: https://gist.github.com/mikelehen/3596a30bd69384624c11
      // 3: https://firebase.google.com/docs/database/admin/save-data#getting-the-unique-key-generated-by-push
      const item = new Item('myNewItem')
      assert.match(item.createId(),/-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz/)
    })

    xit('should be able to get the id', function () {
      // Get id which was generated by id generator
      const item = new Item('myNewItem')
      const id = item.createId()
      assert.strictEqual(item.getId(), id)
    })

    xit('should throw error if not a valid id', function() {

    })
  })

  xit('should be able to get the order', function () {
    // Get order which was assigned automically at creation
  })
})
